a433-microservices-item-db-1  | 2023-09-16T08:05:26.056+0000 I CONTROL  [initandlisten] MongoDB starting : pid=1 port=27017 dbpath=/data/db 64-bit host=df6d8f21309f
a433-microservices-item-db-1  | 2023-09-16T08:05:26.057+0000 I CONTROL  [initandlisten] db version v3.6.23
a433-microservices-item-db-1  | 2023-09-16T08:05:26.057+0000 I CONTROL  [initandlisten] git version: d352e6a4764659e0d0350ce77279de3c1f243e5c
a433-microservices-item-db-1  | 2023-09-16T08:05:26.057+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.2g  1 Mar 2016
a433-microservices-item-db-1  | 2023-09-16T08:05:26.057+0000 I CONTROL  [initandlisten] allocator: tcmalloc
a433-microservices-item-db-1  | 2023-09-16T08:05:26.057+0000 I CONTROL  [initandlisten] modules: none
a433-microservices-item-db-1  | 2023-09-16T08:05:26.057+0000 I CONTROL  [initandlisten] build environment:
a433-microservices-item-db-1  | 2023-09-16T08:05:26.057+0000 I CONTROL  [initandlisten]     distmod: ubuntu1604
a433-microservices-item-db-1  | 2023-09-16T08:05:26.057+0000 I CONTROL  [initandlisten]     distarch: x86_64
a433-microservices-item-db-1  | 2023-09-16T08:05:26.057+0000 I CONTROL  [initandlisten]     target_arch: x86_64
a433-microservices-item-db-1  | 2023-09-16T08:05:26.057+0000 I CONTROL  [initandlisten] options: { net: { bindIpAll: true } }
a433-microservices-item-db-1  | 2023-09-16T08:05:26.057+0000 I STORAGE  [initandlisten] 
a433-microservices-item-db-1  | 2023-09-16T08:05:26.057+0000 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
a433-microservices-item-db-1  | 2023-09-16T08:05:26.057+0000 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
a433-microservices-item-db-1  | 2023-09-16T08:05:26.057+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=2378M,cache_overflow=(file_max=0M),session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),compatibility=(release="3.0",require_max="3.0"),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),
a433-microservices-item-db-1  | 2023-09-16T08:05:26.699+0000 I STORAGE  [initandlisten] WiredTiger message [1694851526:699944][1:0x7f82e7133a40], txn-recover: Set global recovery timestamp: 0
a433-microservices-item-db-1  | 2023-09-16T08:05:26.723+0000 I CONTROL  [initandlisten] 
a433-microservices-item-db-1  | 2023-09-16T08:05:26.723+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
a433-microservices-item-db-1  | 2023-09-16T08:05:26.723+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
a433-microservices-item-db-1  | 2023-09-16T08:05:26.723+0000 I CONTROL  [initandlisten] 
a433-microservices-item-db-1  | 2023-09-16T08:05:26.724+0000 I STORAGE  [initandlisten] createCollection: admin.system.version with provided UUID: b317cc89-aa09-4dbd-93b5-cf538ec95779
a433-microservices-item-db-1  | 2023-09-16T08:05:26.734+0000 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.6
a433-microservices-item-db-1  | 2023-09-16T08:05:26.734+0000 I STORAGE  [initandlisten] createCollection: local.startup_log with generated UUID: 8db91355-5ce3-41fc-a7d1-68215c26d1af
a433-microservices-item-db-1  | 2023-09-16T08:05:26.744+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/data/db/diagnostic.data'
a433-microservices-item-db-1  | 2023-09-16T08:05:26.745+0000 I NETWORK  [initandlisten] listening via socket bound to 0.0.0.0
a433-microservices-item-db-1  | 2023-09-16T08:05:26.745+0000 I STORAGE  [LogicalSessionCacheRefresh] createCollection: config.system.sessions with generated UUID: a6c72b55-98a7-4e2d-a24f-63b4bb3ecba7
a433-microservices-item-db-1  | 2023-09-16T08:05:26.745+0000 I NETWORK  [initandlisten] listening via socket bound to /tmp/mongodb-27017.sock
a433-microservices-item-db-1  | 2023-09-16T08:05:26.745+0000 I NETWORK  [initandlisten] waiting for connections on port 27017
a433-microservices-item-db-1  | 2023-09-16T08:05:26.760+0000 I INDEX    [LogicalSessionCacheRefresh] build index on: config.system.sessions properties: { v: 2, key: { lastUse: 1 }, name: "lsidTTLIndex", ns: "config.system.sessions", expireAfterSeconds: 1800 }
a433-microservices-item-db-1  | 2023-09-16T08:05:26.760+0000 I INDEX    [LogicalSessionCacheRefresh] 	 building index using bulk method; build may temporarily use up to 500 megabytes of RAM
a433-microservices-item-db-1   | 2023-09-16T08:05:26.761+0000 I INDEX    [LogicalSessionCacheRefresh] build index done.  scanned 0 total records. 0 secs
a433-microservices-item-db-1   | 2023-09-16T08:05:27.749+0000 I NETWORK  [listener] connection accepted from 172.26.0.3:50328 #1 (1 connection now open)
a433-microservices-item-app-1  | 
a433-microservices-item-app-1  | > docker-software-delivery@1.0.0 start /app
a433-microservices-item-app-1  | > node ./bin/www
a433-microservices-item-app-1  | 
a433-microservices-item-app-1  | NODE_ENV: production
a433-microservices-item-app-1  | /app/node_modules/mongodb/lib/mongo_client.js:421
a433-microservices-item-app-1  |           throw err
a433-microservices-item-app-1  |           ^
a433-microservices-item-app-1  | 
a433-microservices-item-app-1  | AssertionError [ERR_ASSERTION]: null == Error [MongoError]: failed to connect to server [item-db:27017] on first connect [Error: connect ECONNREFUSED 172.26.0.2:27017
a433-microservices-item-app-1  |     at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1159:16) {
a433-microservices-item-app-1  |   name: 'MongoError'
a433-microservices-item-app-1  | }]
a433-microservices-item-app-1  |     at Pool.<anonymous> (/app/node_modules/mongodb-core/lib/topologies/server.js:336:35)
a433-microservices-item-app-1  |     at Pool.emit (events.js:400:28)
a433-microservices-item-app-1  |     at Connection.<anonymous> (/app/node_modules/mongodb-core/lib/connection/pool.js:280:12)
a433-microservices-item-app-1  |     at Object.onceWrapper (events.js:520:26)
a433-microservices-item-app-1  |     at Connection.emit (e...
a433-microservices-item-app-1  |     at /app/app.js:24:10
a433-microservices-item-app-1  |     at connectCallback (/app/node_modules/mongodb/lib/mongo_client.js:527:5)
a433-microservices-item-app-1  |     at /app/node_modules/mongodb/lib/mongo_client.js:418:11
a433-microservices-item-db-1   | 2023-09-16T08:05:27.754+0000 I NETWORK  [conn1] received client metadata from 172.26.0.3:50328 conn1: { driver: { name: "nodejs", version: "2.2.36" }, os: { type: "Linux", name: "linux", architecture: "x64", version: "5.15.0-76-generic" }, platform: "Node.js v14.21.3, LE, mongodb-core: 2.1.20" }
a433-microservices-item-app-1  |     at processTicksAndRejections (internal/process/task_queues.js:77:11) {
a433-microservices-item-app-1  |   generatedMessage: true,
a433-microservices-item-app-1  |   code: 'ERR_ASSERTION',
a433-microservices-item-app-1  |   actual: null,
a433-microservices-item-app-1  |   expected: Error [MongoError]: failed to connect to server [item-db:27017] on first connect [Error: connect ECONNREFUSED 172.26.0.2:27017
a433-microservices-item-app-1  |       at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1159:16) {
a433-microservices-item-app-1  |     name: 'MongoError'
a433-microservices-item-app-1  |   }]
a433-microservices-item-app-1  |       at Pool.<anonymous> (/app/node_modules/mongodb-core/lib/topologies/server.js:336:35)
a433-microservices-item-app-1  |       at Pool.emit (events.js:400:28)
a433-microservices-item-app-1  |       at Connection.<anonymous> (/app/node_modules/mongodb-core/lib/connection/pool.js:280:12)
a433-microservices-item-app-1  |       at Object.onceWrapper (events.js:520:26)
a433-microservices-item-app-1  |       at Connection.emit (events.js:400:28)
a433-microservices-item-app-1  |       at Socket.<anonymous> (/app/node_modules/mongodb-core/lib/connection/connection.js:189:49)
a433-microservices-item-app-1  |       at Object.onceWrapper (events.js:520:26)
a433-microservices-item-app-1  |       at Socket.emit (events.js:400:28)
a433-microservices-item-app-1  |       at emitErrorNT (internal/streams/destroy.js:106:8)
a433-microservices-item-app-1  |       at emitErrorCloseNT (internal/streams/destroy.js:74:3),
a433-microservices-item-app-1  |   operator: '=='
a433-microservices-item-app-1  | }
a433-microservices-item-app-1  | npm ERR! code ELIFECYCLE
a433-microservices-item-app-1  | npm ERR! errno 1
a433-microservices-item-app-1  | npm ERR! docker-software-delivery@1.0.0 start: `node ./bin/www`
a433-microservices-item-app-1  | npm ERR! Exit status 1
a433-microservices-item-app-1  | npm ERR! 
a433-microservices-item-app-1  | npm ERR! Failed at the docker-software-delivery@1.0.0 start script.
a433-microservices-item-app-1  | npm ERR! This is probably not a problem with npm. There is likely additional logging output above.
a433-microservices-item-app-1  | 
a433-microservices-item-app-1  | npm ERR! A complete log of this run can be found in:
a433-microservices-item-app-1  | npm ERR!     /root/.npm/_logs/2023-09-16T08_05_26_733Z-debug.log
a433-microservices-item-app-1  | 
a433-microservices-item-app-1  | > docker-software-delivery@1.0.0 start /app
a433-microservices-item-app-1  | > node ./bin/www
a433-microservices-item-app-1  | 
a433-microservices-item-app-1  | NODE_ENV: production
a433-microservices-item-app-1  | Connected to database
